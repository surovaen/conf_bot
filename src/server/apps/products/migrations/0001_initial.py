# Generated by Django 4.0.10 on 2024-02-18 01:01

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dictionaries', '0001_initial'),
        ('telegram', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Breakfast',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('date', models.DateField(null=True, verbose_name='Дата проведения события')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время проведения события')),
                ('is_shown', models.BooleanField(default=False, verbose_name='Показать в боте')),
                ('title', models.CharField(max_length=255, verbose_name='Тема')),
                ('description', models.TextField(verbose_name='Описание')),
                ('place', models.CharField(max_length=255, verbose_name='Место проведения')),
            ],
            options={
                'verbose_name': 'Коуч-завтрак',
                'verbose_name_plural': 'Расписание коуч-завтраков',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('date', models.DateField(null=True, verbose_name='Дата проведения события')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время проведения события')),
                ('is_shown', models.BooleanField(default=False, verbose_name='Показать в боте')),
            ],
            options={
                'verbose_name': 'Конференция',
                'verbose_name_plural': 'Расписание конференций',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('date', models.DateField(null=True, verbose_name='Дата проведения события')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время проведения события')),
                ('is_shown', models.BooleanField(default=False, verbose_name='Показать в боте')),
            ],
            options={
                'verbose_name': 'Курс про деньги',
                'verbose_name_plural': 'Расписание курсов про деньги',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('date', models.DateField(null=True, verbose_name='Дата проведения события')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время проведения события')),
                ('is_shown', models.BooleanField(default=False, verbose_name='Показать в боте')),
                ('type', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline')], default='ONLINE', max_length=255, verbose_name='Тип игры')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Расписание игр',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='GameUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='products.game', verbose_name='Игра')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='telegram.botuser', verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Участник игры',
                'verbose_name_plural': 'Участники игры',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='event_users',
            field=models.ManyToManyField(through='products.GameUser', to='telegram.botuser', verbose_name='Участники'),
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.JSONField(blank=True, null=True, verbose_name='Ответы на вопросы предзаписи')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='products.course', verbose_name='Курс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='telegram.botuser', verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Участник курса',
                'verbose_name_plural': 'Участники курса',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='event_users',
            field=models.ManyToManyField(through='products.CourseUser', to='telegram.botuser', verbose_name='Участники'),
        ),
        migrations.AddField(
            model_name='course',
            name='questions',
            field=models.ManyToManyField(blank=True, to='dictionaries.prerecordingquestion', verbose_name='Вопросы предзаписи'),
        ),
        migrations.CreateModel(
            name='ConferenceUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='products.conference', verbose_name='Конференция')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conferences', to='telegram.botuser', verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Участник конференции',
                'verbose_name_plural': 'Участники конференции',
            },
        ),
        migrations.AddField(
            model_name='conference',
            name='event_users',
            field=models.ManyToManyField(through='products.ConferenceUser', to='telegram.botuser', verbose_name='Участники'),
        ),
        migrations.CreateModel(
            name='BreakfastUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('breakfast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='products.breakfast', verbose_name='Коуч-завтрак')),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.menu', verbose_name='Выбранный завтрак')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breakfasts', to='telegram.botuser', verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Участник коуч-завтрака',
                'verbose_name_plural': 'Участники коуч-завтрака',
            },
        ),
        migrations.AddField(
            model_name='breakfast',
            name='event_users',
            field=models.ManyToManyField(through='products.BreakfastUser', to='telegram.botuser', verbose_name='Участники'),
        ),
        migrations.AddField(
            model_name='breakfast',
            name='menu',
            field=models.ManyToManyField(to='dictionaries.menu', verbose_name='Меню'),
        ),
        migrations.AddField(
            model_name='breakfast',
            name='price',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.breakfastprice', verbose_name='Стоимость'),
        ),
    ]
